# [gcode_macro Variable_Prep_zp]
# gcode:
#  #{% set BED_TYPE = printer.curr_bed_type %}
#  {% if BED_TYPE == "Textured PEI Plate" %}
#    #G29.1 Z{-0.04} ; squish of 0.7mm for Textured PEI Plate
#    {% set variable_bed_type = 0.7 %}
#  {% elif BED_TYPE == "High Temp Plate" %}
#    #G29.1 Z{+0.02} ; raise of 1.2mm for Smooth PEI Plate
#    {% set variable_bed_type = 1.8 %}
#  {% elif BED_TYPE == "Engineering Plate" %}
#    #G29.1 Z{+0.02} ; raise of 2.4mm for G10 Plate
#    {% set variable_bed_type = 2.4 %}
#  {% else %}
#    #G29.1 Z{+0.02} ; raise of 2.4mm for other cases
#    {% set variable_bed_type = 0 %}
#  {% endif %}
#  #{% set variable_prep_zp = variable_bed_type %}
 
# [gcode_macro Variable_Prep_zp]
# gcode:
#  #{% set BED_TYPE = printer.curr_bed_type %}
#  {% if BED_TYPE =="Textured PEI Plate" %}
#    #G29.1 Z{-0.04} ; squish of 0.7mm for Textured PEI Plate
#    {% set zpa = 0.6 %}
#  {% elif BED_TYPE =="High Temp Plate" %}
#    #G29.1 Z{+0.02} ; raise of 1.2mm for Smooth PEI Plate
#    {% set zpa = 1.0 %}
#  {% elif BED_TYPE =="Engineering Plate" %}
#    #G29.1 Z{+0.02} ; raise of 2.4mm for G10 Plate
#    {% set zpa = 2.4 %}
#  {% else %}
#    #G29.1 Z{+0.02} ; raise of 2.4mm for other cases
#    {% set zpa = 0 %}
#  {% endif %}


# ######-----Nozzle Prep-----------------------------------------------------------------

#   Settings for the Nozzle Prep
[gcode_macro Nozzle_Prep_Variables]
gcode:


variable_prep_x:       340.5 # x prep location
variable_prep_y:       180  # y prep location
variable_prep_z:       5.25  # z location for brushing
variable_prep_zp:      0.6  #zpa  # Build Plate thickness,Tex PEI= 0.6 Smooth PEI=1.2, Garolite=2.37 <----------------------<--------------<---------------#############   
variable_prep_z_entry: 5 # z entry location before going to the prep location
variable_travel_speed:  200 # how fast travel speeds will be performed
variable_entry_speed:   100 # how fast to move from the entry location to the purge location
variable_prep_speed:    50  # how fast to move when wiping
variable_wait_x:       341 # x purge location
variable_wait_y:       145  # y purge location
variable_wait_z:       2.5  #zpa  # Height from bed into rubber
variable_wait_x_entry: 340 # x entry location before going to the purge location
variable_wait_y_entry: 145 # y entry location before going to the purge location
variable_wait_z_entry: 4 # z entry location before going to the prep location
variable_brush_dx:       3   # distance to move in x from the purge position in order to wipe
variable_brush_dy:       45  # distance to move in y from the purge position in order to wipe
variable_brush_count:    4   # number of wipe cycles
variable_brush_speed:    200  # how fast to move when wiping
#gcode:



 #   Move to the Prep Location
[gcode_macro Go_To_Prep_Location]
gcode:
    STATUS_CLEANING
    {% set Px = printer["gcode_macro Nozzle_Prep_Variables"].prep_x|float %}
    {% set Py = printer["gcode_macro Nozzle_Prep_Variables"].prep_y|float %}
    {% set Pz = printer["gcode_macro Nozzle_Prep_Variables"].prep_z|float %} ##
    {% set Pzp = printer["gcode_macro Nozzle_Prep_Variables"].prep_zp|float %}
    {% set Pzt = 0-Pzp+Pz|float %}
    {% set Pze = printer["gcode_macro Nozzle_Prep_Variables"].prep_z_entry|float %} ##
    {% set PSt = printer["gcode_macro Nozzle_Prep_Variables"].travel_speed * 60 %}

    {% if not (printer.toolhead.position.x == Px and printer.toolhead.position.y == Py and printer.toolhead.position.z == Pzt) %}
         G1 Z{Pze} F{PSt}
         G1 X{Px} Y{Py} Z{Pze} F{PSt}
         G1 Z{Pzt} F{PSt}
     {% endif %}

# #	Cleans the nozzle on the silicone wiper and brass brush located in the build chamber
# [gcode_macro Clean_Nozzle]
# gcode:
	# SAVE_GCODE_STATE NAME=scrub_nozzle_state	#store current nozzle location
    # G28
    # SET_LED LED=status_leds RED=1.00 GREEN=0.00 BLUE=0.00 TRANSMIT=1
    # M109 S180
    # Nozzle_Scrub
	# RESTORE_GCODE_STATE NAME=clean_nozzle_state MOVE=1 #restore current nozzle location
	# SET_LED LED=status_leds RED=0.00 GREEN=0.00 BLUE=0.00 TRANSMIT=1

# ######-----PURGE-------------------------------------------------------------------

#   Settings for the nozzle purge
[gcode_macro Nozzle_Purge_Variables]
# the values below are for a purge located at (-51, 65, 25)
variable_purge_x:       350 # x purge location
variable_purge_y:       167  # y purge location
variable_purge_z:       4  # z purge location
variable_purge_x_entry: 340   # x entry location before going to the purge location
variable_purge_y_entry: 150 # y entry location before going to the purge location
variable_purge_z_entry: 8 # z entry location before going to the purge location
variable_travel_speed:  300 # how fast travel speeds will be performed
variable_entry_speed:   100 # how fast to move from the entry location to the purge location
variable_purge_speed:   7   # how fast to extrude in mm/s when purging
variable_purge_fan:     128  # default fan speed out of 255 when purging
variable_wipe_fan:      250 # default fan speed out of 255 when wiping
gcode:

#   Move above the purge bucket
[gcode_macro Go_To_Purge_Location]
gcode:
    {% set Px = printer["gcode_macro Nozzle_Purge_Variables"].purge_x|float %}
    {% set Py = printer["gcode_macro Nozzle_Purge_Variables"].purge_y|float %}
    {% set Pz = printer["gcode_macro Nozzle_Purge_Variables"].purge_z|float %} ##
    {% set Pxe = printer["gcode_macro Nozzle_Purge_Variables"].purge_x_entry|float %}
    {% set Pye = printer["gcode_macro Nozzle_Purge_Variables"].purge_y_entry|float %}
    {% set Pze = printer["gcode_macro Nozzle_Purge_Variables"].purge_z_entry|float %} ##
    {% set St = printer["gcode_macro Nozzle_Purge_Variables"].travel_speed * 60 %}
    {% set Se = printer["gcode_macro Nozzle_Purge_Variables"].entry_speed * 60 %}

    {% if not (printer.toolhead.position.x == Px and printer.toolhead.position.y == Py and printer.toolhead.position.z == Pz) %}
        G1 X{Pxe} Y{Pye} Z{Pze} F{St}
        G1 X{Px} Y{Py} Z{Pz} F{Se}
    {% endif %}


# #   Purge material into the bucket
# [gcode_macro Purge]
# # params:
# #   EXACT_TEMP: whether to cool to specified temperature if already above it
# #   TEMPERATURE: minimum extruder temperature before purging
# #   FEED_AMOUNT: length of material in mm to purge
# gcode:
    # SET_LED LED=status_leds RED=0.00 GREEN=0.00 BLUE=0.25 TRANSMIT=1
    # {% set EXACT_TEMP = params.EXACT_TEMP|default(False) %}
    # {% set TEMPERATURE = params.TEMPERATURE|default(230.0)|float %}
    # {% set FEED_AMOUNT = params.FEED_AMOUNT|default(15.0)|float %}
    # {% set Sp = printer["gcode_macro Nozzle_Purge_Variables"].purge_speed * 60 %}
    # {% set Sf = printer["gcode_macro Nozzle_Purge_Variables"].purge_fan %}
    # {% set old_Sf = printer.fan.speed %}
    
    # # go to purge location
    # Go_To_Purge_Location

    # # wait for hotend
    # {% if EXACT_TEMP == 'True' or printer.extruder.temperature < TEMPERATURE %}
        # M109 S{TEMPERATURE}
    # {% endif %}

    # # set fan speed for purging
    # M106 S{Sf}

    # # extrude
    # M83
    # G1 E{FEED_AMOUNT - 3} F{Sp}
    # G1 E3 F100
    # G1 E-1.0 F200
    # G92 E0.0

    # # wait
    # G4 P800

    # # wipe the nozzle
    # #Wipe_Nozzle
    # OLD_FAN_SPEED={old_Sf}


# ######-----BRUSH-----------------------------------------------------------------

[gcode_macro Brush_Nozzle]
gcode:
    {% set Bx = printer["gcode_macro Nozzle_Prep_Variables"].prep_x|float %}
    {% set By = printer["gcode_macro Nozzle_Prep_Variables"].prep_y|float %}
    {% set Bdx = printer["gcode_macro Nozzle_Prep_Variables"].brush_dx|float %}
    {% set Bdy = printer["gcode_macro Nozzle_Prep_Variables"].brush_dy|float %}
    {% set Bz = printer["gcode_macro Nozzle_Prep_Variables"].prep_z|float %} ##
    {% set Bzp = printer["gcode_macro Nozzle_Prep_Variables"].prep_zp|float %}
    {% set Bzt = 0-Bzp+Bz|float %}
    {% set Bc = printer["gcode_macro Nozzle_Prep_Variables"].brush_count|int %}
    {% set BSw = printer["gcode_macro Nozzle_Prep_Variables"].brush_speed * 60 %}

    {% if not (printer.toolhead.position.x == Bx and printer.toolhead.position.y == By and printer.toolhead.position.z == Bzt) %}
    {% endif %}
    Go_To_Prep_Location
    # Brush nozzle
      {% for i in range(Bc) %}
        G1 X{Bx + Bdx} Y{By + Bdy} F{BSw} # moves up and to the right
        G4 P100
        G1 X{Bx + Bdx} Y{By} F{BSw} #moves straight back
        G4 P100
        G1 X{Bx - Bdx} Y{By + Bdy} F{BSw} #moves up and cross to the left
        G4 P100
        G1 X{Bx - Bdx} Y{By} F{BSw}
        G4 P100
        G1 X{Bx} Y{By + Bdy} F{BSw}
        G4 P100
        G1 X{Bx} Y{By} F{BSw}
        G4 P100
       {% endfor %}
      STATUS_READY


# #	Path that the nozzle cleaning macro will follow to clean nozzle (must be in relative coordinate gcode)  	
# [gcode_macro Nozzle_Scrub_path]
# gcode:
# 	G0 Y+50 F12000				#scrub
# 	G0 Y-50 F12000				#scrub

# # #   Brush the nozzle on the Wire Brush
# [gcode_macro Brush_Nozzle]
# gcode:
	
#    # SET_LED LED=status_leds RED=0.00 GREEN=0.00 BLUE=1.00 TRANSMIT=1
# 	Go_To_Prep_Location		#move to nozzle brush
# 	#G91 						#relative positioning
# 	#G0 Z-3 F600				#move nozzle to end of brush and into bristles
#     {% for n in range(6) %}
# 		Nozzle_Scrub_path		#run macro for nozzle scrub
#     {% endfor %}
#     #G0 Z3 F600				#move nozzle out of bristles
# 	#G90
    
    #   Move to the Wait Location
[gcode_macro Go_To_Wait_Location]
gcode:
    {% set Wx = printer["gcode_macro Nozzle_Prep_Variables"].wait_x|float %}
    {% set Wy = printer["gcode_macro Nozzle_Prep_Variables"].wait_y|float %}
    {% set Wxe = printer["gcode_macro Nozzle_Prep_Variables"].wait_x_entry|float %}
    {% set Wye = printer["gcode_macro Nozzle_Prep_Variables"].wait_y_entry|float %}
    {% set WSt = printer["gcode_macro Nozzle_Prep_Variables"].travel_speed * 60 %}
    {% set Wze = printer["gcode_macro Nozzle_Prep_Variables"].prep_z_entry|float %}
    {% set Wz = printer["gcode_macro Nozzle_Prep_Variables"].wait_z|float %} ##
    {% set Wzp = printer["gcode_macro Nozzle_Prep_Variables"].prep_zp|float %}
    {% set Wzt = 0-Wzp+Wz|float %}


    {% if not (printer.toolhead.position.x == Wx and printer.toolhead.position.y == Wy and printer.toolhead.position.z == Wzt) %}
        STATUS_BUSY
        G1 X{Wxe} Y{Wye} Z{Wze} F{WSt}
        G1 X{Wx} Y{Wy} Z{Wzt} F{WSt}
    {% endif %}